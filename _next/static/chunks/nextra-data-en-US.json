{"/contributors":{"title":"Contributing to Qbox","data":{"":"Thank you for taking the time to contribute!These guidelines will help you help us in the best way possible regardless of your skill level. We ask that you try to read everything related to the way you'd like to contribute and try and use your best judgement for anything not covered.Make sure to also read our Contributor Code of Conduct.If you still have further questions after reading be sure to join the Qbox Discord server.","issues#Issues":"Open a new issue to report a bug or request a new feature or improvement.If you want to ask a question, issues are not the place to do so. Please join our Discord server and ask over there instead.Before opening a new issue:\nSearch for existing issues; maybe someone else already experienced the same problem that you're having! Duplicate issues will be closed.\nDownload the latest release of the resource you are opening the issue for to make sure that it wasn't already fixed. Issues that are already fixed are considered invalid and will be closed.\nWhen opening a new issue, make sure to pick the right type of form and fill it out. The more information you provide, the easier it will be for us to work on your new issue. Issues that are invalid or do not follow the correct form may be ignored or even closed.","pull-requests#Pull Requests":"Open a new pull request to contribute code.You can use your own editor of choice, but we recommend using VSCode with these extensions:\nGitLens\nLua Language Server\nEditorConfig\nCfxLua IntelliSense\nIf you are new to contributing code, you can check out and try to fix issues marked with good first issue.If you want to contribute code but don't know what to do, please check out issues marked with help wanted as those are issues that we actually need help with.If you want to contribute code unrelated to an existing issue, you should open an issue yourself or ask over on the Discord server to discuss it with our team and ask whether your change is wanted, especially if you are planning on adding new features or large designs.Before opening a pull request:\nMake sure that your contribution fits our code conventions described below. After opening a pull request your code will be checked according to them.\nMake sure that your pull request is small and focused. Break it into multiple smaller pull requests if not (see Small Pull Request Manifesto).\nIt is recommended to test your changes to make sure they work and don't break existing functionality.\nWhen opening a pull request, make sure to follow the template and explain your changes. If you are trying to contribute something related to a GitHub issue, make sure to mention it as well.","code-conventions#Code Conventions":"Below are conventions that you must follow when contributing code.","commit-message-conventions#Commit Message Conventions":"The first line of a commit message must be 72 characters at most.\nCommit messages and pull request titles must follow Conventional Commits.\nUse fix: when patching a bug.\nUse feat: when introducing a new feature.\nUse refactor: when altering code without changing functionality.\nUse chore: when your changes don't alter production code.\nAppend a ! after the type/scope of the feature when you change code and introduce a breaking API change. Optionally add a footer to the bottom of your commit message separated by 2 newlines, starting with BREAKING CHANGE:, and explaining the breaking change.","lua-conventions#Lua Conventions":"","general-style#General Style":"Use 4 space indentation.\nPrefer creating local variables over global ones.\nDon't repeat yourself. If you're using the same operations in multiple different places convert them into a flexible function.\nExported functions must be properly annotated (see LuaLS Annotations).\nUtilize ox_lib to make your life easier. Prefer lib calls over native ones.\nMake use of config options where it makes sense to make features optional and/or customizable. Configs should not be modified by other code.","optimization--security#Optimization & Security":"Consider this Lua Performance guide.\nDon't create unnecessary threads. Always try to find a better method of triggering events.\nSet longer Wait calls in distance checking loops when the player is out of range.\nDon't waste cycles; job specific loops should only run for players with that job.\nWhen possible don't trust the client, especially with transactions.\nBalance security and optimizations.\nUse #(vector3 - vector3) instead of GetDistanceBetweenCoords().\nUse myTable[#myTable + 1] = 'value' instead of table.insert(myTable, 'value').\nUse myTable['key'] = 'value' instead of table.insert(myTable, 'key', 'value').","naming#Naming":"Use camelCase for local variables and functions.\nUse PascalCase for global variables and functions.\nAvoid acronyms as they can be confusing and context dependant.\nBe descriptive; make it easy for the reader.\nBooleans may be prefixed with is, has, are, etc.\nArrays should have plural names.","javascripttypescript-conventions#JavaScript/TypeScript Conventions":"Consider following the Google JavaScript Style Guide and the Google TypeScript Style Guide."}},"/converting":{"title":"Converting from QBCore","data":{"check-your-job-grades-in-qbx_coresharedjobslua#Check your job grades in qbx_core/shared/jobs.lua.":"In Qbox, job grades are numbers without quotations, whereas in QBCore they are strings.","configure-ox_inventory-and-convert-your-database#Configure ox_inventory and convert your database.":"Back it up first! (see ox_inventory documentation)","qbox-has-multicharacter-built-into-qbx_core#Qbox has multicharacter built into qbx_core.":"If you want to keep using your own multicharacter resource, configure qbx_core accordingly.\nOtherwise you can disable or delete your old multicharacter resource.","qbox-has-a-queue-system-built-into-qbx_core#Qbox has a queue system built into qbx_core.":"If you want to keep using your own queue system, specify set qbx:enablequeue \"false\" inside your cfg file.\nOtherwise you can disable or delete your old queue system.","run-the-sql-file-provided-with-qbx_core#Run the SQL file provided with qbx_core":"This will alter the players table in the following ways:\nAdd to the players table to add the new column last_logged_out\nChange the collation of players.citizenid column to utf8mb4_unicode_ci\nNote: You may need to manually change the collation of other tables' citizenid column if you get an error that a foreign key constraint was violated.","configure-multijobmultigang#Configure multijob/multigang":"Qbox has a multijob/gang system built into core that cannot be disabled. By default, players may only be in one job & gang. This can be overriden by setting qbx:max_jobs_per_player and qbx:max_gangs_per_player in server.cfg.\nDo not use an external multijob/gang resource that isn't guaranteed by the developer to be Qbox compatible.\nUsing incompatible multijobs or resources which modify core's database tables may lead to data corruption. First, double check that the player.citizenid column in your database has collation utf8mb4_unicode_ci. If not, change it.\nThen, run qbx_core.sql to create the new player_groups table. Start the server and type convertjobs into the txAdmin console once the server is running to populate the player_groups table.\nThis needs to be done even if you don't already have a multijob/gang system.","migrating-a-resource-from-qbcore-to-qbox#Migrating a resource from QBCore to Qbox":"This is optional as Qbox has 99% compatibility with existing QB scripts\nWithin Qbox, the core object no longer exists.\nInstead, the data can be accessed via a combination of export functions and imported modules.\nImport the needed modules from qbx_core to supply replacement functions for ones from QBCore;\nReplace calls to QBCore one by one with calls to the imported modules and exported functions. Both can be used at the same time, so conversion can be done partially, or over time.","common-replacements#Common replacements":"QBCore.Functions. -> exports.qbx_core:\nQBCore.Functions.GetPlayerData() -> QBX.PlayerData -- requires importing the playerdata module\nQBCore.Functions.GetPlate(vehicle) -> qbx.getVehiclePlate(vehicle) -- requires importing the lib module\nQBCore.Shared.Jobs -> exports.qbx_core:GetJobs()\nQBCore.Shared.Gangs -> exports.qbx_core:GetGangs()\nQBCore.Shared.Vehicles -> exports.qbx_core:GetVehiclesByName()\nQBCore.Shared.Weapons -> exports.qbx_core:GetWeapons()\nQBCore.Shared.Locations -> exports.qbx_core:GetLocations()\nQBCore.Shared.Items -> exports.ox_inventory:Items()\nexports['qb-core']:KeyPressed() -> lib.hideTextUI()\nexports['qb-core']:HideText() -> lib.hideTextUI()\nexports['qb-core']:DrawText(text, position) -> lib.showTextUI(text, { position = position })\nexports['qb-core']:ChangeText(text, position) -> lib.hideTextUI() lib.showTextUI(text, { position = position })"}},"/developers":{"title":"Developer's Guide","data":{"":"This guide is intended for those creating scripts using qbx_core.\nFollowing these principles will make it less likely for your script to break in future updates.","do-not-access-database-tables-owned-by-core#Do not access database tables owned by core":"Doing this will break your script if the database schema changes in the future.\nIf the data you need can't be read or written using a qbx_core/qbx_vehicles export,\ncreate a GitHub issue so we can rectify the problem for everyone.","do-not-modify-core-code#Do not modify core code":"Doing this will make it difficult for you to update in the future, and create confusion when debugging issues that may or may not be due to your custom changes.We've attempted to design things with flexibility in mind. \nHowever, if you really feel you need to modify core, file a GitHub issue first.\nWe'll see if we can trigger an event for you, surface a config value, or re-design something for the flexibility you need.","do-not-use-deprecated-functionsevents#Do not use deprecated functions/events":"These are likely to be removed in future updates.","set-statebag-when-spawning-an-owned-vehicle#Set statebag when spawning an owned vehicle":"When spawning a vehicle that is owned by a player, the vehicle's vehicleid statebag should be set to the id from the player_vehicles table. This allows other resources to look up info about the vehicle in the database using a stable identifier","to-set-vehicle-properties-when-spawning-a-vehicle-pass-the-properties-into-the-spawnvehicle-function#To set vehicle properties when spawning a vehicle, pass the properties into the spawnVehicle function":"Do not manually set the properties after the vehicle exists. This is an anti-pattern and may cause issues if the client is not the entity owner.","do-not-rely-on-unversionedunreleased-resources#Do not rely on unversioned/unreleased resources":"We make no guarantees about rapid breaking changes in these resources. They are not stable."}},"/faq":{"title":"Frequently Asked Questions","data":{"what-are-the-differences-between-qbcore-and-qbox#What are the differences between QBCore and Qbox?":"While originally forked from QBCore, many Qbox resources have been refactored to improve code quality, enhance security, lower performance overhead, and integrate with overextended resources.\nWhere appropriate Qbox also integrates directly with other open source projects, rather than maintaining subpar resources in-house.Qbox maintains high quality standards, with a strong community of regular contributors.\nAs time goes on, expect greater differences in player facing features.","will-my-qbcore-scripts-work-with-qbox#Will my QBCore scripts work with Qbox?":"TL;DR: Yes (in most cases).We've created a bridge layer for backwards compatibility with the documented and proper ways of using qb-core,\nand you can continue to use most QBCore scripts without any modifications.An exception to this is resources that use qb-core in undocumented, unsupported, invalid, and/or improper ways, such as:\nDirect access to database tables;\nDirect access to qb-core files that aren't meant to be used by other resources;\nInvalid usages of existing functions;\nAnd other unexpected ways not mentioned here.","who-should-use-qbox#Who should use Qbox?":"Servers currently using QBCore and servers interested in running QBCore in the future.","is-qbox-ready-to-use#Is Qbox ready to use?":"Since qbx_core is backwards compatible with qb-core resources, we recommend using only the released Qbox resources for a stable experience.","which-resources-are-ready-to-use#Which resources are ready to use?":"qbx_core\nqbx_divegear\nqbx_diving\nqbx_binoculars\nqbx_management\nqbx_radio\nqbx_truckrobbery\nqbx_vehicles\nqbx_garages\nqbx_loading\nqbx_smallresources","are-multijob-resources-compatible-with-qbox#Are multijob resources compatible with Qbox?":"They can be, but only if calling qbx_core exports to add/modify/remove player's jobs.\nThe two common issues with multijob resources are:\nDirectly accessing Qbox's database tables\nMaintaining Qbox's core data in a resource's own table","do-i-need-to-convert-my-resources-to-qbox-to-make-them-work#Do I need to convert my resources to Qbox to make them work?":"No, the bridge layer handles the compatibility for resources expecting QBCore style exports and events. Converting resources only helps to improve readability and reduce the memory footprint","are-beta-releases-ready-to-be-used#Are beta releases ready to be used?":"If you see a resource with a version less than v1.0.0, it is a beta released resources.\nBeta releases still meet all of our release standards, except that they may not yet be as optimized or cleaned up as we'd like.\nTo qualify for a beta release we're principally concerned that the resource works well, and the API & dependencies are appropriate.\nWe wouldn't release resources in beta if we didn't think they were stable and ready to be used.","common-problems-and-questions#Common Problems and Questions":"","no-such-export-getcoreobject-in-resource-qbx_core#No such export GetCoreObject in resource qbx_core":"Qbox does not have the core object. However, you can continue to use exports['qb-core']:GetCoreObject() to get a core object from Qbox's QB bridge layer.","warn-this-resource-is-still-using-the-deprecated-qbx_core-utils#[WARN] This resource is still using the deprecated qbx_core utils!":"If you are receiving this warning then please download the latest release/commit for that resource. With the exception of archived resources this dependency has been resolved.","can-i-use-my-own-multicharacter#Can I use my own multicharacter?":"Yes, you can. To disable the built in multicharacter change this setting to true in qbx_core/config/client.lua\n    useExternalCharacters = false, -- Whether you have an external character management resource. (If true, disables the character management inside the core)","can-i-use-my-own-notification-system#Can I use my own notification system?":"Yes, you can but you will need to modify ox_lib to pass the event to your notification system.","vehicle-model-names-starting-with-a-number#Vehicle model names starting with a number":"When using vehicle names that start with a number you need to enclose them in square brackets like this\n    ['5vigero'] =","keybind-changes-do-not-work#Keybind changes do not work":"Changing keybinds via convars or configuration files will not change them for clients that have already connected to the server. You need to clear your binds manually in order them to reset to the defaults","txadmin-installation-task-failed-response-code-403-rate-limit-exceeded#txAdmin Installation: Task Failed: Response code 403 (rate limit exceeded)":"This is due to Github rate limits which is outside our control. You can keep trying or change your IP address","script-error-failed-to-load-model#SCRIPT ERROR: failed to load model":"This is likely due to a low performance PC. If the error is qbx_core you can adjust the timeout in qbx_core/config/client.lua under loadingModelsTimeout","do-i-need-to-add-items-to-qbx_coreshareditemslua-and-ox_inventory#Do I need to add items to qbx_core/shared/items.lua and ox_inventory?":"No you don't need to add items there unless they are being accessed in a resource via the bridge such as a script that is not ox_inventory compatible. Items added here will be automatically added to ox_inventory but you will have to manually add things like client/server exports in the ox_inventory/data/items.lua","error-sql-cant-create-table-xyz-foreign-key-constraint-is-incorrectly-formed#Error SQL: Can't create table xyz (Foreign Key Constraint is incorrectly formed)":"This is due to a mismatch of collation types between the table being created and existing tables. Add the following to the end of the CREATE TABLE parts of the sql you are trying to add and that should fix the issue. You may need to drop the table and readd it for the changes to apply\nDEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;"}},"/":{"title":"Introduction","data":{"":"Qbox is a FiveM roleplay framework created on September 27, 2022.Starting as a QBCore fork, its goal was improving upon QBCore while maintaining backwards compatibility. \nToday this framework strives to be much greater, and utilizes overextended's resources to achieve its goals.","support--questions#Support & Questions":"Support for Qbox is provided by the community in the support channels of the Qbox Discord.Luckily, Qbox benefits from a great community with varied experience.\nWe encourage everyone to help each other in a friendly and respectable manner.","converting-from-qbcore#Converting from QBCore":"Already have a server that uses QBCore? No worries!\nQbox has backwards-compatibility for almost all QBCore scripts, with a few exceptions (learn more in the FAQ).Planning on converting to Qbox anyway to be able to utilize its new and modern functions and features?\nLearn how to convert your resources to Qbox in Converting from QBCore.","note-for-developers#Note for Developers":"Planning on utilizing qbx_core in your next resource?\nMake sure to read the Developer's Guide to learn about principles that make you avoid bad practices and help you in having a better developer expetience.","contributing-to-qbox#Contributing to Qbox":"Contributions are always welcome, but we prefer quality over quantity!\nPlease read our contributing guidelines to learn how best to contribute.","frequently-asked-questions#Frequently Asked Questions":"Check out the FAQ to learn more about Qbox."}},"/release":{"title":"Release Readiness","data":{"":"Guidelines for indicating that a resource is stable and ready for release.","code-quality#Code Quality":"No lint errors are present.\nAll print statements are replaced with lib.print.\nox_lib is used to replace natives where possible.\nCode uses best practices and follows the contribution guidelines.\nCode is readable and well organized.\nNo deprecated functions are being invoked.","database-practices#Database Practices":"Does not read directly from tables it does not own, and uses exports and functions from the owning resources to get the data instead.\nHas direct database calls to tables it does own in a designated storage layer of the resource (see server/storage.lua in qbx_core).","config-practices#Config Practices":"Config is located inside of a config folder and is split between client.lua, shared.lua, server.lua, and optionally more. Each of these are a module (i.e. returns a table).","core-practices#Core Practices":"Client PlayerData is accessed using playerdata module, instead of a qbx_core export.\nLib module is used to replace duplicate code like DrawText.","resource-quality#Resource Quality":"Resource features provide a good experience for players/devs/owners/admins.\nResource is scoped appropriately (i.e. it shouldn't be split, or combined with another resource).\nREADME is not outdated.\nNo known bugs.","stability#Stability":"No breaking changes are planned in the near future.\nResource has been tested or unchanged for long enough to give confidence that major bugs are not present.","dependencies#Dependencies":"Dependencies are declared and enforced using lib.checkDependency. fxmanifest dependencies should be used intentionally; understanding the behavior of restarting a resource.\nDependencies are stable.","release-automation--documentation#Release Automation & Documentation":"The first line of code executed by the server is lib.versionCheck.\nThe resource has a .github folder with bug/suggestion templates, automated version updater & release script.\nThe resource has a README which contains marketing material about the resource and it's features. Note that this is not technical documentation.\nThe resource's public API (events & exports) are documented on the technical docs (here)."}},"/resources/qbx_adminmenu":{"title":"qbx_adminmenu","data":{}},"/resources/qbx_binoculars":{"title":"qbx_binoculars","data":{}},"/resources/qbx_core":{"title":"qbx_core","data":{}},"/resources/qbx_core/convars":{"title":"Convars","data":{"":"Below is a list of convars used within qbx_core.\nThe value shown in the example is the default value for each convar.","qbxenablebridge#qbx:enableBridge":"Enables or disables the qb-core bridge for compatibility with QBCore resources.\nsetr qbx:enableBridge \"true\"\nType: boolean","qbxenablequeue#qbx:enableQueue":"Enables or disables the built-in qbx_core queuing system.\nset qbx:enableQueue \"true\"\nType: boolean","qbxbucketlockdownmode#qbx:bucketLockdownMode":"Sets entity lockdown mode for bucket 0.\nSee SET_ROUTING_BUCKET_ENTITY_LOCKDOWN_MODE for more information.\nset qbx:bucketLockdownMode \"inactive\"\nType: 'inactive' | 'relaxed' | 'strict'","qbxdiscordlink#qbx:discordLink":"Sets the Discord link for kick messages.\nThis convar is only used by the qb-core bridge, and the deprecated utils module.\nset qbx:discordLink \"discord.gg/qbox\"\nType: string","qbxmax_jobs_per_player#qbx:max_jobs_per_player":"Sets the maximum number of jobs a player can have with the built-in multijob.\nset qbx:max_jobs_per_player 1\nType: integer","qbxmax_gangs_per_player#qbx:max_gangs_per_player":"Sets the maximum number of gangs a player can have with the built-in multigang.\nset qbx:max_gangs_per_player 1\nType: integer","qbxsetjob_replaces#qbx:setjob_replaces":"Controls if the /setjob command replaces or adds a job to a player.\nset qbx:setjob_replaces \"true\"\nType: boolean","qbxsetgang_replaces#qbx:setgang_replaces":"Controls if the /setgang command replaces or adds a gang to a player.\nset qbx:setgang_replaces \"true\"\nType: boolean","qbxcleanplayergroups#qbx:cleanPlayerGroups":"Controls if the player_groups SQL table is automatically cleaned of invalid groups (jobs/gangs) on startup.\nset qbx:cleanPlayerGroups \"true\"\nType: boolean","qbxallowmethodoverrides#qbx:allowMethodOverrides":"Enables or disables the ability of resources to override existing methods in player object.\nset qbx:allowMethodOverrides \"true\"\nType: boolean","qbxdisableoverridewarning#qbx:disableOverrideWarning":"Enables or disables warning from resources overriding existing methods in player object.\nset qbx:disableOverrideWarning \"false\"\nType: boolean","qbxenablevehiclepersistence#qbx:enableVehiclePersistence":"When enabled, player owned vehicles deleted by the server which have persistence enabled on them (either via having spawned using qbx.spawnVehicle or through exports.qbx_core:EnablePersistence), will be respawned with the same properties as when the vehicle was deleted.\nThis is a fix to a FiveM bug which can result in vehicles randomly being deleted; ensuring that vehicles that players leave, will be there when they return.\nsetr qbx:enableVehiclePersistence \"false\"\nType: boolean","qbxacknowledge#qbx:acknowledge":"Enables or disabled the Qbox documentation console message.\nset qbx:acknowledge \"false\"\nType: boolean","qbxmotd#qbx:motd":"The message displayed to players in the chat after loading in.\nset qbx:motd \"<p style='padding: 1rem; background-color: rgb(30, 30, 30); border-radius: 1rem; text-align: center;'><span style='color: rgb(40, 200, 40);'>Welcome to Qbox!</span><br>Learn more at <span id='link' style='color: rgb(100, 100, 255);' onclick='window.invokeNative(\\\"openUrl\\\", \\\"https://docs.qbox.re/\\\")'>docs.qbox.re</span></p><style>span#link:hover { cursor: pointer; }</style>\""}},"/resources/qbx_core/events/client":{"title":"Client Events","data":{"":"These events MUST NOT be triggered by any other scripts.\nSome of these events use custom types.\nYou can learn more about those in the Types section of this resource.","non-networked-events#Non-Networked Events":"","qbcoreclientonplayerloaded#QBCore:Client:OnPlayerLoaded":"Triggered when the player finishes spawning.\nAddEventHandler('QBCore:Client:OnPlayerLoaded', function() end)","networked-events#Networked Events":"","qbcoreclientsetduty#QBCore:Client:SetDuty":"Triggered when the player's job duty is updated.\nRegisterNetEvent('QBCore:Client:SetDuty', function(onDuty) end)\nonDuty: boolean","qbcoreclientonpermissionupdate#QBCore:Client:OnPermissionUpdate":"Triggered when the player's permissions are updated. \nOnly works for permissions set via Qbox.\nRegisterNetEvent('QBCore:Client:OnPermissionUpdate', function() end)","qbx_coreclientplayerloggedout#qbx_core:client:playerLoggedOut":"Triggered when the player logs out and no longer exists in qbx_core's memory.\nRegisterNetEvent('qbx_core:client:playerLoggedOut', function() end)","qbcoreclientonjobupdate#QBCore:Client:OnJobUpdate":"Triggered when the player's job is updated.\nRegisterNetEvent('QBCore:Client:OnJobUpdate', function(job) end)\njob: PlayerJob","qbcoreclientongangupdate#QBCore:Client:OnGangUpdate":"Triggered when the player's gang is updated.\nRegisterNetEvent('QBCore:Client:OnGangUpdate', function(gang) end)\ngang: PlayerGang","qbx_coreclientongroupupdate#qbx_core:client:onGroupUpdate":"Triggered when the player's groups are updated. If grade is nil then group was removed otherwise group was added\nRegisterNetEvent('qbx_core:client:onGroupUpdate', function(groupName, groupGrade) end)\ngroupName: string\ngroupGrade?: number","qbcoreclientonmoneychange#QBCore:Client:OnMoneyChange":"Triggered when the player's cash/bank balance is updated.\nRegisterNetEvent('QBCore:Client:OnMoneyChange', function(moneytype, amount, operation, reason) end)\nmoneyType: 'cash' | 'bank' | 'crypto'\namount: number\noperation: 'add' | 'remove' | 'set'\nreason: string","qbx_coreclientonsetmetadata#qbx_core:client:onSetMetaData":"Triggered when player.Functions.setMetaData() is used.\nRegisterNetEvent('qbx_core:client:onSetMetaData', function(key, oldValue, newValue) end)\nkey: string\noldValue: any\nnewValue: any"}},"/resources/qbx_core/events/server":{"title":"Server Events","data":{"":"These events MUST NOT be triggered by any other scripts.\nSome of these events use custom types.\nYou can learn more about those in the Types section of this resource.","non-networked-events#Non-Networked Events":"","qbcoreserveronplayerunload#QBCore:Server:OnPlayerUnload":"Triggered when aplayer begins the process of logging out. \nThere is no guarantee that the player still exists in qbx_core's memory at the time this event is triggered.\nAddEventHandler('QBCore:Server:OnPlayerUnload', function(source) end)\nsource: integer","qbcoreserveronpermissionupdate#QBCore:Server:OnPermissionUpdate":"Triggered when the player's permissions are updated. \nOnly applies to permissions created through QB permission functions.\nAddEventHandler('QBCore:Server:OnPermissionUpdate', function(source) end)\nsource: integer","qbcoreserveronjobupdate#QBCore:Server:OnJobUpdate":"Triggered when a player's job updates.\nAddEventHandler('QBCore:Server:OnJobUpdate', function(source, job) end)\nsource: integer\njob: PlayerJob","qbcoreserverongangupdate#QBCore:Server:OnGangUpdate":"Triggered when a player's gang updates.\nAddEventHandler('QBCore:Server:OnGangUpdate', function(source, gang) end)\nsource: integer\ngang: PlayerGang","qbcoreserversetduty#QBCore:Server:SetDuty":"Triggered when a player's job duty updates.\nAddEventHandler('QBCore:Server:SetDuty', function(source, onDuty) end)\nsource: integer\nonDuty: boolean","qbx_coreserverongroupupdate#qbx_core:server:onGroupUpdate":"Triggered when the player's groups are updated. If grade is nil then group was removed otherwise group was added\nAddEventHandler('qbx_core:server:onGroupUpdate', function(source, groupName, groupGrade) end)\nsource: integer\ngroupName: string\ngroupGrade?: number","qbcoreserveronmoneychange#QBCore:Server:OnMoneyChange":"Triggered when a player's cash/bank balance updates.\nAddEventHandler('QBCore:Server:OnMoneyChange', function(source, moneyType, amount, operation, reason) end)\nsource: integer\nmoneyType: 'cash' | 'bank' | 'crypto'\namount: number\noperation: 'add' | 'remove' | 'set'\nreason: string","qbx_coreserveronsetmetadata#qbx_core:server:onSetMetaData":"Triggered when player.Functions.setMetaData() is used.\nAddEventHandler('qbx_core:server:onSetMetaData', function(key, oldValue, newValue, source) end)\nkey: string\noldValue: any\nnewValue: any\nsource: number","networked-events#Networked Events":"","qbcoreserveronplayerloaded#QBCore:Server:OnPlayerLoaded":"Triggered when a player has finished loading.\nRegisterNetEvent('QBCore:Server:OnPlayerLoaded', function() end)"}},"/resources/qbx_core/exports/client":{"title":"Client Exports","data":{"notify#Notify":"See lib.notify for more details.\nText box popup which disappears after a given amount of time.\nexports.qbx_core:Notify(text, notifyType, duration, subTitle, notifyPosition, notifyStyle, notifyIcon, notifyIconColor)\ntext: table | string\nThe text of the notification.\nCan be a string, or a table containing:\ntext?: string\ncaption?: string\nnotifyType?: 'inform' | 'error' | 'success' | 'warning'\nDefault: 'inform'\nduration?: integer\nThe duration in milliseconds for which the notification will remain on screen.\nDefault: 5000\nsubTitle?: string\nAdditional text under the title.\nnotifyPosition?: 'top' | 'top-right' | 'top-left' | 'bottom' | 'bottom-right' | 'bottom-left' | 'center-right' | 'center-left'\nDefault: top-right (changable in config)\nnotifyStyle?: table\nCustom styling. Refer to lib.notify.\nnotifyIcon?: string\nFont Awesome 6 icon name.\nnotifyIconColor?: string\nCustom color for notifyIcon.","hasprimarygroup#HasPrimaryGroup":"Checks if the player's current Job/Gang or citizenid matches against a single group, array of group, or group/grade or list of citizenids. Does not check if player is on or off duty\nexports.qbx_core:HasPrimaryGroup(filter)\nfilter: string or string[] or table<string, number>\nA group/citizenid, array of groups/citizenids, or pairs of groups-grades required to pass the check.\nReturns:\nsuccess: boolean","hasgroup#HasGroup":"Checks if the player's list of groups (Jobs/Gangs) or citizenid matches against a single group, array of group, or group/grade or list of citizenids. Does not check if player is on or off duty\nexports.qbx_core:HasGroup(filter)\nfilter: string or string[] or table<string, number>\nA group/citizenid, array of groups/citizenids, or pairs of groups-grades required to pass the check.\nReturns:\nsuccess: boolean","getgroups#GetGroups":"Returns a combined table of all the groups the current player currently has.\nexports.qbx_core:GetGroups()\nReturns:\ngroups: table<string, number>"}},"/resources/qbx_core/exports/shared":{"title":"Shared Exports","data":{"getjobs#GetJobs":"Returns the jobs table.\nexports.qbx_core:GetJobs()\nReturns: table<string, Job>","getgangs#GetGangs":"Returns the gangs table.\nexports.qbx_core:GetGangs()\nReturns: table<string, Gang>","getjob#GetJob":"Returns the given job if it exists.\nexports.qbx_core:GetJob(jobName)\njobName: string\nReturns: Job?","getgang#GetGang":"Returns the given gang if it exists.\nexports.qbx_core:GetGang(gangName)\ngangName: string\nReturns: Gang?","getvehiclesbyname#GetVehiclesByName":"Returns a table mapping vehicle name to vehicle.\nexports.qbx_core:GetVehiclesByName(vehicle)\nvehicle?: string\nReturns: table<string, Vehicle>","getvehiclesbyhash#GetVehiclesByHash":"Returns a table mapping vehicle hash to vehicle.\nexports.qbx_core:GetVehiclesByHash(vehicle)\nvehicle?: number\nReturns: table<number, Vehicle>","getvehiclesbycategory#GetVehiclesByCategory":"Returns a table mapping vehicle category to vehicles.\nexports.qbx_core:GetVehiclesByCategory()\nReturns: table<string, Vehicle[]>","getweapons#GetWeapons":"Returns the weapons table.\nexports.qbx_core:GetWeapons(weapon)\nweapon?: number\nReturns: table<number, Weapon>","getlocations#GetLocations":"Returns the locations table.\nexports.qbx_core:GetLocations()\nReturns: table<string, vector4>"}},"/resources/qbx_core/modules/hooks":{"title":"hooks","data":{"":"Event hooks allow 3rd party resources to define new behaviour without modifying your resource directly.","registerhook#registerHook":"Registers a callback function to be triggered by a resource. Returning false from the callback function cancels the event\nexports.my_resource:registerHook(eventName, cb)\neventName: string\npayload: table\nReturn:\nhookId: number","removehooks#removeHooks":"Remove a previously registered hook by it's id.\nIf no id is provided then all hooks registered by the resource are removed.\nexports.my_resource:removeHooks(id)\nid?: number","usage#Usage":"An example hook setup in your resource\nlocal triggerEventHooks = require '@qbx_core.modules.hooks' -- Import triggerEventHooks function from hooks module\n-- Example of some sort of event that could be in your resource\nRegisterNetEvent('your_resource:server:check_condition', function(source)\n    -- Checks to see if any registered hooks return false\n\tif not triggerEventHooks('checkCondition', {source = source, myNumber = 10}) then return end \n    -- Do stuff\nend)\nNow a 3rd party resource can modify the behavior of your resource without having to change any of your code\nexports.qbx_core:registerHook('checkCondition', function(payload)\n  -- payload contains everything passed into triggerEventHooks, which will depend on the resource to document\n  if payload.myNumber == 10 then\n    return true -- Continue as normal\n  else\n    return false -- Stop execution\n  end\nend)"}},"/resources/qbx_core/modules/lib":{"title":"lib","data":{"":"Provides the qbx global table with various utility functions.","prerequisites#Prerequisites":"Lua 5.4 - add lua54 'yes' to your fxmanifest.\nox_lib - add @ox_lib/init.lua to shared_scripts in your fxmanifest.","installation#Installation":"Add @qbx_core/modules/lib.lua to shared_scripts in your fxmanifest. Make sure it's below the @ox_lib/init.lua script."}},"/resources/qbx_core/modules/lib/client":{"title":"Client Lib","data":{"drawtext2d#drawText2d":"Draws text onto the screen in 2D space for a single frame.\nqbx.drawText2d(params)\nparams: table\ntext: string\ncoords: vector2\nOn-screen coordinates.\nscale?: integer\nDefault: 0.35\nfont?: integer\nDefault: 4\ncolor?: vector4\nAn RGBA value; white by default.\nwidth?: number\nDefault: 1.0\nheight?: number\nDefault: 1.0\nenableDropShadow?: boolean\nEnables a black drop shadow for the text.\nenableOutline?: boolean\nEnables a black outline for the text.","drawtext3d#drawText3d":"Draws text onto the screen in 3D space for a single frame.\nqbx.drawText3d(params)\nparams: table\ntext: string\ncoords: vector3\nIn-world coordinates.\nscale?: integer | vector2\nUse a integer to scale uniformly or use a vec2 to scale x and y different amounts.\nDefault: vec2(0.35, 0.35)\nfont?: integer\nDefault: 4\ncolor?: vector4\nAn RGBA value; white by default.\ndisableDrawRect?: boolean\nDisables drawing a rectangle background for the text.\nenableDropShadow?: boolean\nEnables a black drop shadow for the text.\nenableOutline?: boolean\nEnables a black outline for the text.","getentityandnetidfrombagname#getEntityAndNetIdFromBagName":"Gets and returns an entity handle and network id from a state bag name. \nWill return 0 for both if an invalid entity was received.\nqbx.getEntityAndNetIdFromBagName(bagName)\nbagName: string\nReturns:\nentity: integer\nnetId: integer","entitystatehandler#entityStateHandler":"Returns a state bag handler made for entities.\nqbx.entityStateHandler(keyFilter, cb)\nkeyFilter: string\ncb: fun(entity: number, netId: number, value: any, bagName: string)\nReturns: number","deletevehicle#deleteVehicle":"Deletes the specified vehicle and returns whether it was successful.\nqbx.deleteVehicle(vehicle)\nvehicle: integer\nReturns: boolean","getvehicledisplayname#getVehicleDisplayName":"Returns the model name of the given vehicle.\nqbx.getVehicleDisplayName(vehicle)\nvehicle: integer\nReturns: string","getvehiclemakename#getVehicleMakeName":"Returns the brand name of the given vehicle.\nqbx.getVehicleMakeName(vehicle)\nvehicle: integer\nReturns: string","getvehiclemodname#getVehicleModName":"Returns the mod type name of the given vehicle.\nqbx.getVehicleModName(vehicle, modType, modIndex)\nvehicle: integer\nmodType: integer\nmodIndex: integer\nReturns: string","getvehicleliveryname#getVehicleLiveryName":"Returns the livery name of the given vehicle.\nqbx.getVehicleLiveryName(vehicle, liveryIndex)\nvehicle: integer\nliveryIndex: integer\nReturns: string","getstreetname#getStreetName":"Returns the street name and cross section name at the given coords.\nqbx.getStreetName(coords)\ncoords: vector3\nReturns:\nstreetName: table\nmain: string\ncross: string","getzonename#getZoneName":"Returns the name of the zone at the given coords.\nqbx.getZoneName(coords)\ncoords: vector3\nReturns: string","setvehicleextra#setVehicleExtra":"Set an extra on the given vehicle.\nqbx.setVehicleExtra(vehicle, extra, enable)\nvehicle: integer\nextra: integer\nenable: boolean\nWhether to enable the extra.","resetvehicleextras#resetVehicleExtras":"Enables all the extras of the given vehicle.\nqbx.resetVehicleExtras(vehicle)\nvehicle: integer","setvehicleextras#setVehicleExtras":"Sets all the extras of the given vehicle.\nqbx.setVehicleExtra(vehicle, extras)\nvehicle: integer\nextras: table<integer, boolean>","iswearinggloves#isWearingGloves":"Returns if the local ped is wearing gloves.\nqbx.isWearingGloves()\nReturns: boolean","loadaudiobank#loadAudioBank":"Attempts to load an audio bank and returns whether it was successful. \nRemember to use ReleaseScriptAudioBank since you can only load up to 10 banks.\nqbx.loadAudioBank(audioBank, timeout)\naudioBank: string\ntimeout?: number\nReturns: boolean","playaudio#playAudio":"Plays a sound with the provided audio name and audio ref. \nIf returnSoundId is false or not specified the soundId is released, \notherwise the function returns the soundId without releasing it.\nqbx.playAudio(params)\nparams: table\naudioName: string\naudioRef: string\nreturnSoundId?: boolean\naudioSource?: number | vector3\nEntity handle or vector3 coords.\nrange?: number\nOnly used if audioSource is a vector3 coordinate.\nReturns: number?"}},"/resources/qbx_core/modules/lib/server":{"title":"Server Lib","data":{"spawnvehicle#spawnVehicle":"Creates a vehicle on the server-side and returns its net ID. If this is a player owned vehicle, and the persistence convar is enabled, the spawned vehicle will be persisted.\nqbx.spawnVehicle(params)\nparams: table\nmodel: integer\nA vehicle modle hash.\nspawnSource: integer | vector3 | vector4\nThe handle of an entity or coords to spawn the vehicle at.\nwarp?: boolean | integer\nAn optional ped ID to warp into the vehicle after it spawns.\nIf spawnSource is a ped ID, you can pass true to warp the ped specified there instead.\nprops?: table\nRefer to ox_lib's Vehicle Properties.\nbucket? integer\nAn optional routing bucket to move the spawned entity to.\nReturns:\nnetId: integer\nentity: integer\n-- spawns the vehicle at `myVectorCoords` and warps `myPed` inside\nqbx.spawnVehicle({\n  model = `asbo`,\n  spawnSource = myVectorCoords,\n  warp = myPed,\n})\n-- spawns the vehicle at `myPed` and warps the same ped inside\nqbx.spawnVehicle({\n  model = `asbo`,\n  spawnSource = myPed,\n  warp = true, -- causes `myPed` to be warped into the vehicle\n})"}},"/resources/qbx_core/modules/lib/shared":{"title":"Shared Lib","data":{"armswithoutglovesmale#armsWithoutGloves.male":"A set of male torso drawable variations that don't have gloves. \nUsed for qbx.isWearingGloves and backwards compatibility.\nqbx.armsWithoutGloves.male\nType: table<integer, true>","armswithoutglovesfemale#armsWithoutGloves.female":"A set of female torso drawable variations that don't have gloves. \nUsed for qbx.isWearingGloves and backwards compatibility.\nqbx.armsWithoutGloves.female\nType: table<integer, true>","stringtrim#string.trim":"Returns the given string with its trailing whitespaces removed.\nqbx.string.trim(str)\nstr: string\nReturns: string","stringcapitalize#string.capitalize":"Returns the given string with its first character capitalized.\nqbx.string.capitalize(str)\nstr: string\nReturns: string","mathround#math.round":"Rounds and returns the given number.\nqbx.math.round(num, decimalPlaces)\nnum: number\ndecimalPlaces?: integer\nReturns: number","tablesize#table.size":"Returns the number of items in a table. Useful for non-array tables.\nqbx.table.size(tbl)\ntbl: table\nReturns: integer","tablemapbysubfield#table.mapBySubfield":"Maps and returns the values of the given table by the given subfield.\nqbx.table.mapBySubfield(tbl, subfield)\ntbl: table\nsubfield: any\nReturns: table<any, table[]>\nlocal tble = {\n  {\n    myCategory = 'first',\n    someValue = 1,\n  },\n  {\n    myCategory = 'second',\n    someValue = 2,\n  },\n}\nlocal mapped = qbx.table.mapBySubfield(tble, 'myCategory')\nprint(json.encode(mapped))\n-- Output: { \"first\": [{ myCategory: \"first\", someValue: 1 }], \"second\": [{ myCategory: \"second\", someValue: 2 }] }","getvehicleplate#getVehiclePlate":"Returns the number plate of the given vehicle, or nil if the vehicle or plate does not exist.\nqbx.getVehiclePlate(vehicle)\nvehicle: integer\nReturns: string?","generaterandomplate#generateRandomPlate":"Generates and returns a random number plate with the given pattern. \nNote that the generated plate may or may not be already used by an existing vehicle.\nFor more info about the pattern see lib.string.random from ox_lib.\nqbx.generateRandomPlate(pattern)\npattern?: string\nReturns: string","getcardinaldirection#getCardinalDirection":"Returns the cardinal direction that the given entity is staring towards.\n                North\n    45°           0°           315°\n      \\    .- - - - - - -.    /\n         X                 X\n       .'   \\           /   '.\n      |        \\     /        |\nWest  |           X           |  East\n      |        /     \\        |\n       '.   /           \\   .'\n         X                 X\n      /    '- - - - - - -'    \\\n    135°                      225°\n                South\n(art inspired by SET_PED_TURNING_THRESHOLDS)\nqbx.getCardinalDirection(entity)\nentity: integer\nReturns: 'North' | 'South' | 'East' | 'West'","arraycontains#array.contains":"Returns true if the given array contains the given value\nqbx.array.contains(arr, value)\narr: table\nvalue: any\nReturns: boolean"}},"/resources/qbx_core/modules/logger":{"title":"logger","data":{"":"See the ox_lib Logger for further details.\nAdds a logger that logs to Discord if a webhook is given, and with ox_lib otherwise.\nlocal logger = require '@qbx_core.modules.logger'\nlogger.log(log)\nlog: table\nsource: string\nThe source of the log; usually a player ID or the name of a resource.\nevent: string\nThe action or event being logged; usually a verb describing what the name is doing.\nExample: 'SpawnVehicle'\nmessage: string\nA message attached to the log.\nwebhook?: string\nDiscord logs only.\nThe URL of the webhook that this should log to.\ncolor?: string\nDiscord logs only.\nThe color the message should be.\ntags?: string[]\nDiscord logs only.\nTags to be added to the Discord message.\nExample: { '<@&roleid>', '<@userid>', '@everyone' }","example-usage#Example Usage":"local logger = require '@qbx_core.modules.logger'\nlogger.log({\n  source = 'my source',\n  event = 'my event',\n  message = 'my message',\n  tags = { '@everyone' },\n})"}},"/resources/qbx_core/modules/playerdata":{"title":"playerdata","data":{"":"Adds a QBX.PlayerData global and keeps it updated.","installation#Installation":"Add @qbx_core/modules/playerdata.lua to client_scripts in your fxmanifest."}},"/resources/qbx_core/types/gang":{"title":"Gangs","data":{"gangdata#GangData":"Fields\nlabel: string","gang#Gang":"Extends GangDataFields\ngrades: table<integer, GangGradeData>","ganggradedata#GangGradeData":"Fields\nname: string\nisboss?: boolean\nbankAuth?: boolean"}},"/resources/qbx_core/types/job":{"title":"Jobs","data":{"jobdata#JobData":"Fields\nlabel: string\ntype?: string\ndefaultDuty: boolean\noffDutyPay: boolean","job#Job":"Extends JobDataFields\ngrades: table<integer, JobGradeData>","jobgradedata#JobGradeData":"Fields\nname: string\nisboss?: boolean\nbankAuth?: boolean\npayment: number"}},"/resources/qbx_core/types/player":{"title":"Players","data":{"player#Player":"Fields\nFunctions: table\nDeprecated.\nPlayerData: PlayerData\nOffline: boolean","playerdata#PlayerData":"Extends PlayerEntityFields\nsource?: integer\nPresent if the player is online.\noptin?: boolean\nPresent if the player is online.","playerentity#PlayerEntity":"Fields\ncitizenid: string\nlicense: string\nname: string\nmoney: table\ncash: number\nbank: number\ncrypto: number\ncharinfo: table\nfirstname: string\nlastname: string\nbirthdate: string\nnationality: string\ncid: integer\ngender: integer\nbackstory: string\nphone: string\naccount: string\ncard: number\njob: PlayerJob\njobs: table<string, integer> maps job name to job grade that the player has. Unemployed not included.\ngang: PlayerGang\ngangs: table<string, integer> maps gang name to gang grade that the player has. None gang not included.\nposition: vector4\nmetadata: table\nhealth: number\narmor: number\nhunger: number\nthirst: number\nstress: number\nisdead: boolean\ninlaststand: boolean\nishandcuffed: boolean\ntracker: boolean\ninjail: number\njailitems: table\nstatus: table\nphone: table\nbackground: any\nprofilepicture: any\nbloodtype: string\ndealerrep: number\ncraftingrep: number\nattachmentcraftingrep: number\ncurrentapartment?: integer\njobrep: table\ntow: number\ntrucker: number\ntaxi: number\nhotdog: number\ncallsign: string\nfingerprint: string\nwalletid: string\ncriminalrecord: table\nhasRecord: number\ndate?: table\nlicences: table\nid: boolean\ndriver: boolean\nweapon: boolean\ninside: table\nhouse?: any\napartment: table\napartmentType?: any\napartmentId?: integer\nphonedata: table\nSerialNumber: string\nInstalledApps: table\ncid: integer\nitems: table\nDeprecated.\nlastLoggedOut: integer","playerjob#PlayerJob":"Fields\nname: string\nlabel: string\npayment: number\ntype?: string\nonduty: boolean\nisboss: boolean\ngrade: table\nname: string\nlevel: number","playergang#PlayerGang":"Fields\nname: string\nlabel: string\nisboss: boolean\ngrade: table\nname: string\nlevel: number"}},"/resources/qbx_core/types/vehicle":{"title":"Vehicle","data":{"vehicle#Vehicle":"Fields\nname: string\nbrand: string\nmodel: string\nprice: number\ncategory: string\ntype: string\nhash: string | integer"}},"/resources/qbx_divegear":{"title":"qbx_divegear","data":{}},"/resources/qbx_diving":{"title":"qbx_diving","data":{}},"/resources/qbx_diving/events/server":{"title":"Server Events","data":{"":"These events MUST NOT be triggered by any other scripts.","non-networked-events#Non-Networked Events":"","qbx_divingservercoraltaken#qbx_diving:server:coralTaken":"Triggered when a player has collected coral from the sea bed.\nAddEventHandler('qbx_diving:server:coralTaken', function(coords) end)\ncoords: vector3","networked-events#Networked Events":"","qbx_divingserversellcoral#qbx_diving:server:sellCoral":"Triggered when a player attempts to sell coral. \nDoes not guarantee that the player has any coral in their inventory.\nRegisterNetEvent('qbx_diving:server:sellCoral', function() end)"}},"/resources/qbx_garages":{"title":"qbx_garages","data":{}},"/resources/qbx_garages/callbacks/client":{"title":"Server Callbacks","data":{"":"Can be used to support a custom UI. Called from the client.","getgarages#getGarages":"Get the currently registered garages\nlib.callback.await('qbx_garages:server:getGarages')","getgaragevehicles#getGarageVehicles":"Get vehicles that the player has access to in the given garage. Does not return vehicles currently spawned in the world.\nlib.callback.await('qbx_garages:server:getGarageVehicles', false, garageName)","isparkable#isParkable":"Returns true if the player can access the garage and the vehicle matches the garage filters\nlib.callback.await('qbx_garages:server:isParkable', false, garageName, netId)","parkvehicle#parkVehicle":"Stores the vehicle in the garage and deletes the entity from the world\nlib.callback.await('qbx_garages:server:parkVehicle', false, netId, props, garageName)","paydepotprice#payDepotPrice":"Takes vehicle's depot price from cash or bank and returns true if player paid. Does not update the vehicle's depot price after payment.\nlib.callback.await('qbx_garages:server:payDepotPrice', false, vehicleId)","spawnvehicle#spawnVehicle":"Spawns the vehicle entity in the world at the given garage's access point. Checks that the player has required access permissions to do so.\nAttempts to give the player vehicle keys.\nlib.callback.await('qbx_garages:server:spawnVehicle', false, vehicleId, garageName, accessPointIndex)"}},"/resources/qbx_hud":{"title":"qbx_hud","data":{}},"/resources/qbx_management":{"title":"qbx_management","data":{}},"/resources/qbx_management/exports/client":{"title":"Client Exports","data":{"openbossmenu#OpenBossMenu":"Open the primary job or gang boss menu as long as you have the proper permissions.\nexports.qbx_management:OpenBossMenu(groupType)\ngroupType: 'gang' | 'job'"}},"/resources/qbx_radio":{"title":"qbx_radio","data":{}},"/resources/qbx_smallresources":{"title":"qbx_smallresources","data":{}},"/resources/qbx_spawn":{"title":"qbx_spawn","data":{}},"/resources/qbx_truckrobbery":{"title":"qbx_truckrobbery","data":{}},"/resources/qbx_vehiclekeys":{"title":"qbx_vehiclekeys","data":{}},"/resources/qbx_vehiclekeys/exports/client":{"title":"Client Exports","data":{"haskeys#HasKeys":"Returns whether the player has keys to the given vehicle entity\nexports.qbx_vehiclekeys:HasKeys(vehicle)\nvehicle: number"}},"/resources/qbx_vehiclekeys/exports/server":{"title":"Server Exports","data":{"haskeys#HasKeys":"Returns whether the player has keys to the given vehicle entity\nexports.qbx_vehiclekeys:HasKeys(source, vehicle)\nsource: number\nvehicle: number","givekeys#GiveKeys":"Gives keys to a player so that they can unlock/lock the doors and toggle the engine.\nNotifies the player unless skipNotification is true.\nexports.qbx_vehiclekeys:GiveKeys(source, vehicle, skipNotification)\nsource: number\nvehicle: number\nskipNotification?: boolean","removekeys#RemoveKeys":"Removes keys from the player. Notifies the player unless skipNotification is true.\nexports.qbx_vehiclekeys:RemoveKeys(source, vehicle, skipNotification)\nsource: number\nvehicle: number\nskipNotification?: boolean"}},"/resources/qbx_vehicles":{"title":"qbx_vehicles","data":{}},"/resources/qbx_vehicles/exports/hooks":{"title":"Hooks","data":{"":"Event hooks allow 3rd party resources to define new behavior without modifying qbx_vehicles code directly.","registerhook#registerHook":"Registers a callback function to be triggered by a resource. Returning false from the callback function cancels the event\nexports.qbx_vehicles:registerHook(eventName, function(payload) end)\neventName: string\npayload: table\nReturn:\nhookId: number","createplayervehicle#createPlayerVehicle":"Triggered when a new vehicle is created. Return false to cancel the creation\npayload: table\ncitizenid: string\ngarage: string\nprops: table","changevehicleowner#changeVehicleOwner":"Triggered when a vehicle's owner changes. Return false to cancel the change.\npayload: table\nvehicleId: integer\nnewCitizenId: string","removehooks#removeHooks":"Remove a previously registered hook by it's id.\nIf no id is provided then all hooks registered by the resource are removed.\nexports.qbx_vehicles:removeHooks(id)\nid?: number"}},"/resources/qbx_vehicles/exports/server":{"title":"Server Exports","data":{"createplayervehicle#CreatePlayerVehicle":"Sets the owner of the vehicle, or if citizenid is nil, sets the vehicle to have no owner.\nexports.qbx_vehicles:CreatePlayerVehicle(request)\nrequest: table\nmodel: string\ncitizenid?: string\ngarage?: string\nprops?: ox_lib vehicle properties\nReturns:\nvehicleId?: integer\nerrorResult?: {code: string, message: string}\nError Codes: N/A","deleteplayervehicles#DeletePlayerVehicles":"Delete player vehicles matching some identifier. Only handles deleting from the database.\nexports.qbx_vehicles:DeletePlayerVehicles(idType, idValue)\nidType: 'citizenid' | 'license' | 'plate' | 'vehicleId'\nidValue: string | number\nReturns:\nsuccess: boolean\nerrorResult?: {code: string, message: string}\nError Codes: N/A","doesplayervehicleplateexist#DoesPlayerVehiclePlateExist":"Returns whether a player owned vehicle has the matching plate\nexports.qbx_vehicles:DoesPlayerVehiclePlateExist(plate)\nplate: string\nReturns: boolean","getplayervehicle#GetPlayerVehicle":"Queries a player vehicle by vehicleId. Can optionally pass filter criteria.\nexports.qbx_vehicles:GetPlayerVehicle(vehicleId, filters)\nvehicleId: number\nfilters?: PlayerVehiclesFilters\nReturns: PlayerVehicle?","getplayervehicles#GetPlayerVehicles":"Queries player vehicles by various filter criteria. If no filters are set, queries all vehicles.\nexports.qbx_vehicles:GetPlayerVehicles(filters)\nfilters?: PlayerVehiclesFilters\nReturns: PlayerVehicle[]","setplayervehicleowner#SetPlayerVehicleOwner":"Sets the owner of the vehicle, or if citizenid is nil, sets the vehicle to have no owner.\nexports.qbx_vehicles:SetPlayerVehicleOwner(vehicleId, citizenid)\nvehicleId: integer\ncitizenid?: string\nReturns:\nsuccess: boolean\nerrorResult?: {code: string, message: string}\nError Codes: N/A","getvehicleidbyplate#GetVehicleIdByPlate":"Looks up the vehicleId with the given plate\nexports.qbx_vehicles:GetVehicleIdByPlate(plate)\nplate: string\nReturns vehicleId?: integer","savevehicle#SaveVehicle":"Update an existing vehicle's attributes\nexports.qbx_vehicles:SaveVehicle(vehicle, options)\nvehicle: number entity\noptions: table\ngarage?: string\nstate?: VehicleState\ndepotPrice?: integer\nprops?: ox_lib vehicle properties\nReturns:\nsuccess: boolean\nerrorResult?: {code: string, message: string}\nError Codes:\nnot_owned: unable to locate the vehicle's row in the player_vehicles table","common-types#Common Types":"","vehiclestate#VehicleState":"OUT = 0\nGARAGED = 1\nIMPOUNDED = 2","playervehicle#PlayerVehicle":"id: integer\ncitizenid?: string\nmodelName: string\ngarage: string\nstate: VehicleState\ndepotPrice: integer\nprops: ox_lib vehicle properties","playervehiclesfilters#PlayerVehiclesFilters":"citizenid?: string\nstates?: VehicleState | VehicleState[]\ngarage?: string"}},"/installation":{"title":"Installation","data":{"":"We highly recommend using txAdmin to install your FiveM server. \nFor detailed instructions, refer to Setting up a server using txAdmin.","download-the-server#Download the server":"Download the latest FiveM artifacts and extract the files.","start-the-server-installation#Start the server installation":"Run FXServer.exe to begin the installation and follow all the steps.","deploy-the-recipe#Deploy the recipe":"When prompted, select Remote URL Template:Use the raw recipe link shown below.\nThe Qbox Unstable Recipe comes with all of our actively maintained resources. \nUse this if you're looking for a complete server base.\nhttps://raw.githubusercontent.com/Qbox-project/txAdminRecipe/main/qbox.yaml\nThe Qbox Lean Recipe is a stripped down version of Qbox, without excess resources,\nand it does not include any criminal or civilian activities. \nUse this if you're looking for a smaller server base to build off of.\nhttps://raw.githubusercontent.com/Qbox-project/txAdminRecipe/main/qbox-lean.yaml\nThe Qbox Stable Recipe comes with the resources we consider stable, based on our Release Readiness guidelines. \nUse this if you're looking for the most stable experience.\nSince many Qbox resources are still a work-in-progress, some important resources are still considered unstable,\nand are currently missing from this recipe. This may result in various issues.\nYou are expected to find alternatives by yourself, or to download the unstable versions of those resources.\nhttps://raw.githubusercontent.com/Qbox-project/txAdminRecipe/main/qbox-stable.yaml","run-the-server#Run the server":"Once you have completed all of the installation steps, run the server."}},"/resources/qbx_core/exports/server":{"title":"Server Exports","data":{"":"Some of these exports use custom types.\nYou can learn more about those in the Types section of this resource.","createjobs#CreateJobs":"Adds or overwrites the given jobs.\nThis is a runtime-only change. This won't persist across restarts and won't modify files.\nexports.qbx_core:CreateJobs(jobs)\njobs: table<string, Job>","removejob#RemoveJob":"Removes the given job.\nThis is a runtime-only change. This won't persist across restarts and won't modify files.\nexports.qbx_core:RemoveJob(jobName)\njobName: string\nReturns:\nsuccess: boolean\nmessage: 'success' | 'invalid_job_name' | 'job_not_exists'","creategangs#CreateGangs":"Adds or overwrites the given gangs.\nThis is a runtime-only change. This won't persist across restarts and won't modify files.\nexports.qbx_core:CreateGangs(gangs)\ngangs: table<string, Gang>","removegang#RemoveGang":"Removes the given gang.\nThis is a runtime-only change. This won't persist across restarts and won't modify files.\nexports.qbx_core:RemoveGang(gangName)\ngangName: string\nReturns:\nsuccess: boolean\nmessage: 'success' | 'invalid_gang_name' | 'gang_not_exists'","getcoreversion#GetCoreVersion":"Returns the current version of qbx_core set in its fxmanifest.\nexports.qbx_core:GetCoreVersion(InvokingResource)\nInvokingResource: string\nReturns: string","exploitban#ExploitBan":"Bans the given player for the given reason.\nexports.qbx_core:ExploitBan(playerId, origin)\nplayerId: integer\norigin: string","getsource#GetSource":"Returns the ID of the player that has the given identifier, or 0 if the player is not in the server.\nexports.qbx_core:GetSource(identifier)\nidentifier: string\nReturns: integer","getuserid#GetuserId":"Returns the userId of the player that has the given identifier, or 0 if the player is not in the server.\nexports.qbx_core:GetUserId(identifier)\nidentifier: string\nReturns: integer","getplayer#GetPlayer":"Returns the Player object for the given player ID or identifier.\nexports.qbx_core:GetPlayer(source)\nsource: integer\nReturns: Player?","getplayerbycitizenid#GetPlayerByCitizenId":"Returns the Player object for the given citizenid.\nexports.qbx_core:GetPlayerByCitizenId(citizenid)\ncitizenid: string\nReturns: Player?","getplayerbyuserid#GetPlayerByUserId":"Returns the Player object for the given userId.\nexports.qbx_core:GetPlayerByUserId(citizenid)\nuserId: string\nReturns: Player?","getplayerbyphone#GetPlayerByPhone":"Returns the Player object for the given phone number.\nexports.qbx_core:GetPlayerByPhone(number)\nnumber: string\nReturns: Player?","getqbplayers#GetQBPlayers":"Returns the player ID to Player object map of logged-in players.\nexports.qbx_core:GetQBPlayers()\nReturns: table<integer, Player>","getplayersdata#GetPlayersData":"Returns all PlayerData tables for all active players.\nexports.qbx_core:GetPlayersData()\nReturns: PlayerData[]","setplayerdata#SetPlayerData":"Sets a specific players PlayerData key to a new value.\nexports.qbx_core:SetPlayerData(source, key, value)\nsource: integer\nkey: string\nvalue: any","updateplayerdata#UpdatePlayerData":"Triggers the players PlayerData to update.\nexports.qbx_core:UpdatePlayerData(source)\nsource: integer","getmetadata#GetMetadata":"Gets a specific players metadata value.\nexports.qbx_core:GetMetadata(source, metadata)\nsource: integer\nmetadata: string","setmetadata#SetMetadata":"Sets a specific players metadata key to a new value.\nexports.qbx_core:SetMetadata(source, metadata, value)\nsource: integer\nmetadata: string\nvalue: any","setcharinfo#SetCharInfo":"Sets a specific players character information.\nexports.qbx_core:SetMetadata(source, metadata, value)\nsource: integer\ncharInfo: string\nvalue: any","getdutycountjob#GetDutyCountJob":"Returns the amount of players that are on-duty in the given job, and a list of their IDs.\nexports.qbx_core:GetDutyCountJob(job)\njob: string\nReturns:\ncount: integer\nplayers: integer[]","getdutycounttype#GetDutyCountType":"Returns the amount of players that are on-duty in the given job type, and a list of their IDs.\nexports.qbx_core:GetDutyCountType(jobType)\njobType: string\nReturns:\ncount: integer\nplayers: integer[]","getbucketobjects#GetBucketObjects":"Returns the player to bucket and entity to bucket maps.\nexports.qbx_core:GetBucketObjects()\nReturns:\nplayerBuckets: table<integer, integer>\nentityBuckets: table<integer, integer>","setplayerbucket#SetPlayerBucket":"Sets the given player to the given bucket. \nReturns false if one of the parameters is nil, and true otherwise.\nexports.qbx_core:SetPlayerBucket(source, bucket)\nsource: integer\nbucket: integer\nReturns: boolean","setentitybucket#SetEntityBucket":"Sets the given entity (e.g. ped, vehicle, prop, etc.) to the given bucket. \nReturns false if one of the parameters is nil, and true otherwise.\nexports.qbx_core:SetEntityBucket(entity, bucket)\nentity: integer\nbucket: integer\nReturns: boolean","getplayersinbucket#GetPlayersInBucket":"Returns a list of all the players in the given bucket, or false if there are no known player buckets.\nexports.qbx_core:GetPlayersInBucket(bucket)\nbucket: integer\nReturns: integer[] | false","getentitiesinbucket#GetEntitiesInBucket":"Returns a list of all the entities in the given bucket, or false if there are no known entity buckets.\nexports.qbx_core:GetEntitiesInBucket(bucket)\nbucket: integer\nReturns: integer[] | false","createuseableitem#CreateUseableItem":"Registers the given function to run when the given item is used.\nexports.qbx_core:CreateUseableItem(item, data)\nitem: string\ndata: fun(source: integer, item: unknown)","canuseitem#CanUseItem":"Returns the data set to run when the given item is used, or nil if none exists.\nexports.qbx_core:CanUseItem(item)\nitem: string\nReturns: unknown","iswhitelisted#IsWhitelisted":"Returns whether the given player is whitelisted.\nexports.qbx_core:IsWhitelisted(source)\nsource: integer\nReturns: boolean","addpermission#AddPermission":"Deprecated as of v1.8.0. Use ox_lib ACE permissions instead\nAdds the given permission to the given player.\nexports.qbx_core:AddPermission(source, permission)\nsource: integer\npermission: string","removepermission#RemovePermission":"Deprecated as of v1.8.0. Use ox_lib ACE permissions instead\nRemoves the given permission from the given player.\nexports.qbx_core:RemovePermission(source, permission)\nsource: integer\npermission: string","haspermission#HasPermission":"Deprecated as of v1.8.0. Use ACE permissions instead.\nReturns whether the given player has the given permission.\nexports.qbx_core:HasPermission(source, permission)\nsource: integer\npermission: string\nReturns: boolean","getpermission#GetPermission":"Deprecated as of v1.8.0. Use ACE permissions instead.\nGets the given player's permissions.\nexports.qbx_core:GetPermission(source)\nsource: integer\nReturns: table<string, boolean>","isoptin#IsOptin":"Returns whether the given player is optin to admin reports.\nexports.qbx_core:IsOptin(source)\nsource: integer\nReturns: boolean","toggleoptin#ToggleOptin":"Opts the given player in and out of admin reports.\nexports.qbx_core:ToggleOptin(source)\nsource: integer","isplayerbanned#IsPlayerBanned":"Returns whether the given player is banned, and a message to be shown to the player.\nexports.qbx_core:IsPlayerBanned(source)\nsource: integer\nReturns:\nbanned: boolean\nplayerMessage: string\nA message written to be shown to the player.","notify#Notify":"See lib.notify for more details.\nText box popup for the given player which disappears after a given amount of time.\nexports.qbx_core:Notify(source, text, notifyType, duration, subTitle, notifyPosition, notifyStyle, notifyIcon, notifyIconColor)\nsource: integer\ntext: table | string\nThe text of the notification.\nCan be a string, or a table containing:\ntext?: string\ncaption?: string\nnotifyType?: 'inform' | 'error' | 'success' | 'warning'\nDefault: 'inform'\nduration?: integer\nThe duration in milliseconds for which the notification will remain on screen.\nDefault: 5000\nsubTitle?: string\nAdditional text under the title.\nnotifyPosition?: 'top' | 'top-right' | 'top-left' | 'bottom' | 'bottom-right' | 'bottom-left' | 'center-right' | 'center-left'\nDefault: top-right (changable in config)\nnotifyStyle?: table\nCustom styling. Refer to lib.notify.\nnotifyIcon?: string\nFont Awesome 6 icon name.\nnotifyIconColor?: string\nCustom color for notifyIcon.","login#Login":"Logs into an existing character or creates a new one, and returns whether it was successful. \nThis is the preferred function for creating characters if the owning player is online.\nexports.qbx_core:Login(source, citizenid, newData)\nsource: integer\ncitizenid?: string\nnewData?: PlayerEntity\nReturns: boolean","getofflineplayer#GetOfflinePlayer":"Gets a Player object using the given citizenid and returns it, or nil if nothing was found.\nexports.qbx_core:GetOfflinePlayer(citizenid)\ncitizenid: string\nReturns: Player?","logout#Logout":"Logs the given player out of their current character.\nexports.qbx_core:Logout(source)\nsource: integer","createplayer#CreatePlayer":"Creates a new character and saves it to the database.\nexports.qbx_core:CreatePlayer(playerData, offline)\nplayerData: PlayerData\noffline: boolean\nReturns: Player","save#Save":"Save the given player's info to the database.\nexports.qbx_core:Save(source)\nsource: integer","saveoffline#SaveOffline":"Saves the given PlayerData to the database.\nexports.qbx_core:SaveOffline(playerData)\nplayerData: PlayerEntity","deletecharacter#DeleteCharacter":"Delete a character permanently by the given citizenid.\nThis action cannot be undone.\nexports.qbx_core:DeleteCharacter(citizenid)\ncitizenid: string","generateuniqueidentifier#GenerateUniqueIdentifier":"Returns unique values for player identifiers.\nexports.qbx_core:GenerateUniqueIdentifier(type)\ntype: 'citizenid' | 'AccountNumber' | 'PhoneNumber' | 'FingerId' | 'WalletId' | 'SerialNumber'\nReturns: string | number","upsertjobdata#UpsertJobData":"Inserts or overwrites fields of the given job temporarily.\nThis is a runtime-only change. This won't persist across restarts and won't modify files.\nexports.qbx_core:UpsertJobData(jobName, data)\njobName: string\ndata: JobData","upsertgangdata#UpsertGangData":"Inserts or overwrites fields of the given gang temporarily.\nThis is a runtime-only change. This won't persist across restarts and won't modify files.\nexports.qbx_core:UpsertGangData(gangName, data)\ngangName: string\ndata: GangData","upsertjobgrade#UpsertJobGrade":"Inserts or overwrites fields of the given job's grade temporarily.\nThis is a runtime-only change. This won't persist across restarts and won't modify files.\nexports.qbx_core:UpsertJobGrade(jobName, grade, data)\njobName: string\ngrade: integer\ndata: JobGradeData","upsertganggrade#UpsertGangGrade":"Inserts or overwrites fields of the given gang's grade temporarily.\nThis is a runtime-only change. This won't persist across restarts and won't modify files.\nexports.qbx_core:UpsertGangGrade(gangName, grade, data)\ngangName: string\ngrade: integer\ndata: GangGradeData","removejobgrade#RemoveJobGrade":"Removes the given job's grade temporarily.\nThis is a runtime-only change. This won't persist across restarts and won't modify files.\nexports.qbx_core:RemoveJobGrade(jobName, grade)\njobName: string\ngrade: integer","removeganggrade#RemoveGangGrade":"Removes the given gang's grade temporarily.\nThis is a runtime-only change. This won't persist across restarts and won't modify files.\nexports.qbx_core:RemoveGangGrade(gangName, grade)\ngangName: string\ngrade: integer","setjob#SetJob":"Overwrites current primary job with a new job. Removing the player from their current primary job.\nexports.qbx_core:SetJob(source, jobName, grade)\nsource: integer\njobName: string\ngrade: integer","setjobduty#SetJobDuty":"Sets the player's duty status.\nexports.qbx_core:SetJobDuty(source, onDuty)\nidentifier: integer\nonDuty: boolean","setplayerprimaryjob#SetPlayerPrimaryJob":"Sets the given player's primary job to the given job, only if they already have it.\nexports.qbx_core:SetPlayerPrimaryJob(citizenid, jobName)\ncitizenid: string\njobName: string","addplayertojob#AddPlayerToJob":"Adds the given player to the given job, or overwrites their grade if they're already in that job.\nexports.qbx_core:AddPlayerToJob(citizenid, jobName, grade)\ncitizenid: string\njobName: string\ngrade: integer","removeplayerfromjob#RemovePlayerFromJob":"Removes the given player from the given job.\nAlso updates the given player's primary job to unemployed if the given job is the player's primary.\nexports.qbx_core:RemovePlayerFromJob(citizenid, jobName)\ncitizenid: string\njobName: string","setgang#SetGang":"Overwrites current primary gang with a new job. Removing the player from their current primary gang.\nexports.qbx_core:SetGang(source, jobName, gangName)\nsource: integer\ngangName: string\ngrade: integer","setplayerprimarygang#SetPlayerPrimaryGang":"Sets the given player's primary gang to the given gang, only if they already have it.\nexports.qbx_core:SetPlayerPrimaryGang(citizenid, gangName)\ncitizenid: string\ngangName: string","addplayertogang#AddPlayerToGang":"Adds the given player to the given gang, or overwrites their grade if they're already in that gang.\nexports.qbx_core:AddPlayerToGang(citizenid, gangName, grade)\ncitizenid: string\ngangName: string\ngrade: integer","removeplayerfromgang#RemovePlayerFromGang":"Removes the given player from the given gang.\nAlso updates the given player's primary gang to no gang if the given gang is the player's primary.\nexports.qbx_core:RemovePlayerFromGang(citizenid, gangName)\ncitizenid: string\ngangName: string","hasprimarygroup#HasPrimaryGroup":"Checks if the given player's current Job/Gang or citizenid matches against a single group, array of group, or group/grade or list of citizenids. Does not check if player is on or off duty\nexports.qbx_core:HasPrimaryGroup(source, filter)\nsource: integer\nfilter: string or string[] or table<string, number>\nA group/citizenid, array of groups/citizenids, or pairs of groups-grades required to pass the check.\nReturns:\nsuccess: boolean","hasgroup#HasGroup":"Checks if the given player's list of groups (Jobs/Gangs) or citizenid matches against a single group, array of group, or group/grade or list of citizenids. Does not check if player is on or off duty for any particular filter\nexports.qbx_core:HasGroup(source, filter)\nsource: integer\nfilter: string or string[] or table<string, number>\nA group/citizenid, array of groups/citizenids, or pairs of groups-grades required to pass the check.\nReturns:\nsuccess: boolean","getgroups#GetGroups":"Returns a combined table of all the groups a given player currently has.\nexports.qbx_core:GetGroups(source)\nsource: integer\nReturns:\ntable<string, number>","isgradeboss#IsGradeBoss":"Returns boolean on if a given group/grade combination is a boss grade. Currently this is based on the presence of a isboss boolean being true in the grade definition\nexports.qbx_core:IsGradeBoss(group, grade)\ngroup: string\ngrade: integer\nReturns:\nsuccess: boolean","getgroupmembers#GetGroupMembers":"Returns a table of all citizenids and associated grade for a given group and type\nexports.qbx_core:GetGroupMembers(group, type)\ngroup: string\ntype: job | gang\nReturns:\ntable<citizenid, number>","deletevehicle#DeleteVehicle":"Deletes the vehicle entity from the game world. Preferred over the native DeleteEntity function as DeleteVehicle will remove persistence from the vehicle to allow it to be deleted.\nexports.qbx_core:DeleteVehicle(entity)\nentity: number","enablepersistence#EnablePersistence":"Marks a vehicle to be persisted, which will respawn the vehicle with the same properties if it is deleted by the server. Idempotent.\nexports.qbx_core:EnablePersistence(entity)\nentity: number","disablepersistence#DisablePersistence":"Removes the persistence attribute from a vehicle, allowing it to be deleted without being respawned. Idempotent. No-op if the vehicle is not already persisted.\nexports.qbx_core:DisablePersistence(entity)\nentity: number","getvehicleclass#GetVehicleClass":"Equivalent to GetVehicleClass client native, but for the server. Works by asking a random client for all the vehicle models and their classes, then caching this while the server is online.\nDue to this, may not work if there is no client on to query.\nexports.qbx_core:GetVehicleClass(hash)\nhash: number","searchplayers#SearchPlayers":"Searches both online and offline players on a set of filters and returns players which match all filtered values.Filters:\nlicense?: license string. i.e. 'license2:xxx'\njob?: name of the job\ngang?: name of the gang\nmetadata?: table<string, number|string|boolean>\nstrict?: boolean if true, metadata number values match on exact equivalence, else numbers match if value is greater than or equal to filter.\nexports.qbx_core:SearchPlayers(filters)\nfilters: table<string, any>\nReturns:\nPlayer[]","createsessionid#CreateSessionId":"Sets the sessionId statebag on an entity to a unique number.\nSessionIds are useful in cases where an entity could be deleted and recreated but needs a stable identifier such as vehicle persistence.\nexports.qbx_core:CreateSessionId(entity)\nentity: integer\nReturns:\nsessionId: integer","getmoney#GetMoney":"Gets the specific money type of a player.\nexports.qbx_core:GetMoney(identifier, moneyType)\nidentifier: source | citizenid\nmoneyType: 'cash' | 'bank' | 'crypto'\nReturns:\namount: number or false if invalid money type or unable to find player","addmoney#AddMoney":"Adds the specific money type to a player.\nexports.qbx_core:AddMoney(souce, moneyType, amount, reason)\nsource: integer\nmoneyType: 'cash' | 'bank' | 'crypto'\namount: number\nreason?: string\nReturns:\nsuccess: boolean","removemoney#RemoveMoney":"Removes the specific money type from a player.\nexports.qbx_core:RemoveMoney(souce, moneyType, amount, reason)\nsource: integer\nmoneyType: 'cash' | 'bank' | 'crypto'\namount: number\nreason?: string\nReturns:\nsuccess: boolean","setmoney#SetMoney":"Sets the specific money type for a player.\nexports.qbx_core:SetMoney(souce, moneyType, amount, reason)\nsource: integer\nmoneyType: 'cash' | 'bank' | 'crypto'\namount: number\nreason?: string\nReturns:\nsuccess: boolean"}},"/resources/qbx_garages/exports/server":{"title":"Server Exports","data":{"registergarage#RegisterGarage":"Registers a garage at runtime. This is an alternative to defining them in the qbx_garages config.\nexports.qbx_garages:RegisterGarage(name, config)","setvehiclegarage#SetVehicleGarage":"Sets the vehicle's garage. Only affects the database.\nexports.qbx_garages:SetVehicleGarage(vehicleId, garageName)","setvehicledepotprice#SetVehicleDepotPrice":"Sets the price to take the car out of the depot\nexports.qbx_garages:SetVehicleDepotPrice(vehicleId, depotPrice)","getgarages#GetGarages":"Returns the registered garages\nexports.qbx_garages:GetGarages()"}},"/resources/qbx_management/exports/server":{"title":"Server Exports","data":{"registerbossmenu#RegisterBossMenu":"Creates a boss menu.\nThis is a runtime-only change.\nThis won't persist across restarts and won't modify files.\nexports.qbx_management:RegisterBossMenu(menuInfo)\nmenuInfo: table\ngroupName: string\ntype: 'gang' | 'job'\ncoords: vector3\nsize?: vector3\nDefault: vec3(1.5, 1.5, 1.5)\nrotation?: number\nDefault: 0.0"}}}